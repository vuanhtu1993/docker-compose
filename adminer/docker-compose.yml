version: '3.3'

services:
  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mysqldb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: mongodb-container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # PostgreSQL Service
  postgres:
    image: postgres:15
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpassword
      POSTGRES_DB: postgresdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Adminer Service (replacing DbGate)
  adminer:
    image: adminer:latest
    container_name: adminer-container
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - mysql
      - mongodb
      - postgres

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/ssl
    networks:
      - app-network
    depends_on:
      - adminer

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  mongodb_data:
  postgres_data:
